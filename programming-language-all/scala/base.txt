Scala是一门多范式的编程语言，一种类似java的编程语言
[1]  ，设计初衷是实现可伸缩的语言
[2]  、并集成面向对象编程和函数式编程的各种特性。


更高层的并发模型
Scala把Erlang风格的基于actor的并发带进了JVM。开发者可以利用Scala的actor模型在JVM上设计具伸缩性的并发应用程序，
它会自动获得多核心处理器带来的优势，而不必依照复杂的Java线程模型来编写程序。


Scala与Groovy的对比
一篇名为“Scala，Groovy的杀手? ”的博客对Scala和Groovy进行了对比：
Scala和Groovy之间的核心区别在于前者是静态类型的。有些人可能争辩说这使得达到脚本化目标变得更加复杂了，而脚本化正是Groovy的动机。
然而，Scala有完整的体系特征，这使Groovy看上去更像个玩具。比如，Scala有“sequence comprehensions”。该要素导致对算法的表述非常紧凑和强大。
Scala还有更多被证明是非常有用的特性，如嵌套类，currying和代数类型模式匹配。它还支持类似于JDK1.5所增加的泛型和注解。这些还都只是冰山一角。